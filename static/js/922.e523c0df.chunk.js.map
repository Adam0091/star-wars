{"version":3,"file":"static/js/922.e523c0df.chunk.js","mappings":"gNACA,EAA0B,6BAA1B,EAAyE,qCAAzE,EAA2H,gCAA3H,EAA2K,mCAA3K,EAA4N,iCAA5N,EAA2Q,iC,SCuC3Q,EAhCoB,SAAC,GAAqB,IAAnBA,EAAkB,EAAlBA,YACrB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACR,uBAAC,kGACOC,EAAaL,EAAYM,KAAI,SAACC,GAAD,OAAUC,EAAAA,EAAAA,IAAWD,MADzD,UAEwBE,EAAAA,EAAAA,IAAsBJ,GAF9C,OAEOK,EAFP,OAGCP,EAAaO,GAHd,0CAAD,KAKC,CAACV,KAGF,gBAAKW,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGV,EAAaA,EACXW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,WAAaD,EAAEC,cAChCV,KAAI,gBAAGW,EAAH,EAAGA,MAAOD,EAAV,EAAUA,WAAV,OACH,gBAAIL,UAAWC,EAAf,WACE,kBAAMD,UAAWC,EAAjB,qBAAgDI,MAChD,iBAAML,UAAWC,EAAjB,kBACA,iBAAMD,UAAWC,EAAjB,SAAsCK,MAHDD,OAKnC,SAACE,EAAA,EAAD,CAAWC,MAAM,QAAQC,UAAQ","sources":["webpack://star-wars/./src/components/PersonPage/PersonFilms/PersonFilms.module.css?351f","components/PersonPage/PersonFilms/PersonFilms.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"PersonFilms_wrapper__jljQO\",\"list__container\":\"PersonFilms_list__container__Msv8c\",\"list__item\":\"PersonFilms_list__item__FuYuQ\",\"item__episode\":\"PersonFilms_item__episode__qFZRT\",\"item__colon\":\"PersonFilms_item__colon__AZKQc\",\"item__title\":\"PersonFilms_item__title__Y09cY\"};","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport UILoading from \"@ui/UILoading\";\r\nimport { makeConcurrentRequest, changeHTTP } from \"@utils/network\";\r\n\r\nimport styles from \"./PersonFilms.module.css\";\r\n\r\nconst PersonFilms = ({ personFilms }) => {\r\n  const [filmsName, setFilmsName] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const filmsHTTPS = personFilms.map((film) => changeHTTP(film));\r\n      const response = await makeConcurrentRequest(filmsHTTPS);\r\n      setFilmsName(response);\r\n    })();\r\n  }, [personFilms]);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <ul className={styles.list__container}>\r\n        {filmsName ? (filmsName\r\n          .sort((a, z) => a.episode_id - z.episode_id)\r\n          .map(({ title, episode_id }) => (\r\n            <li className={styles.list__item} key={episode_id}>\r\n              <span className={styles.item__episode}>Episode {episode_id}</span>\r\n              <span className={styles.item__colon}> : </span>\r\n              <span className={styles.item__title}>{title}</span>\r\n            </li>\r\n          ))) : <UILoading theme='white' isShadow />}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nPersonFilms.propTypes = {\r\n  personFilms: PropTypes.array,\r\n};\r\n\r\nexport default PersonFilms;\r\n"],"names":["personFilms","useState","filmsName","setFilmsName","useEffect","filmsHTTPS","map","film","changeHTTP","makeConcurrentRequest","response","className","styles","sort","a","z","episode_id","title","UILoading","theme","isShadow"],"sourceRoot":""}